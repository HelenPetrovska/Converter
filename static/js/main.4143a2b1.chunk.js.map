{"version":3,"sources":["api.ts","App.tsx","index.tsx"],"names":["getCours","a","fetch","response","json","App","useState","courses","setCourses","currencyFirst","setCurrencyFirst","currencySecond","setCurrencySecond","amount","setAmount","currentAmount","setCurrentAmount","useEffect","coursesApi","coursesNeed","ccy","base_ccy","buy","sale","coursesAll","usd","find","rate","eur","console","log","className","Math","floor","name","value","onChange","event","target","map","currency","htmlFor","type","id","el","rateBuy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4143a2b1.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\n\nexport const getCours = async () => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\r\nimport { getCours } from './api';\r\nimport './App.scss';\r\n\r\ninterface Course {\r\n  ccy: string;\r\n  base_ccy: string;\r\n  buy: string;\r\n  sale: string;\r\n}\r\n\r\nexport const App: React.FC = () => {\r\n  const [courses, setCourses] = useState<Course[]>([]);\r\n\r\n  const [currencyFirst, setCurrencyFirst] = useState('UAH');\r\n  const [currencySecond, setCurrencySecond] = useState('USD');\r\n  const [amount, setAmount] = useState<number | string>('');\r\n  const [currentAmount, setCurrentAmount] = useState<number | string>('');\r\n\r\n  useEffect(() => {\r\n    const coursesAll = async () => {\r\n      const coursesApi = await getCours();\r\n      const coursesNeed = [\r\n        ...coursesApi,\r\n        {\r\n          ccy: 'UAH',\r\n          base_ccy: 'UAH',\r\n          buy: '1',\r\n          sale: '1',\r\n        },\r\n      ];\r\n\r\n      setCourses(coursesNeed);\r\n    };\r\n\r\n    coursesAll();\r\n  }, []);\r\n\r\n  const usd = courses.find(rate => rate.ccy === 'USD');\r\n  const eur = courses.find(rate => rate.ccy === 'EUR');\r\n\r\n  const changeCurrencyFirst = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setCurrencyFirst(event.target.value);\r\n    setCurrentAmount(0);\r\n    setAmount(0);\r\n  };\r\n\r\n  const changeCurrencySecond = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setCurrencySecond(event.target.value);\r\n    setCurrentAmount(0);\r\n    setAmount(0);\r\n  };\r\n\r\n  const changeСurrentAmount = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const rateBuy = courses.find(el => el.ccy === currencyFirst)?.buy || 0;\r\n    const rateSale = courses.find(el => el.ccy === currencySecond)?.sale || 0;\r\n    const rate = +rateSale / +rateBuy;\r\n\r\n    setCurrentAmount(+event.target.value);\r\n\r\n    if (currencyFirst === currencySecond) {\r\n      setAmount(+event.target.value);\r\n    } else {\r\n      setAmount(+event.target.value * rate);\r\n    }\r\n  };\r\n\r\n  const changeAmount = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const rateBuy = courses.find(el => el.ccy === currencyFirst)?.buy || 0;\r\n    const rateSale = courses.find(el => el.ccy === currencySecond)?.sale || 0;\r\n    const rate = +rateBuy / +rateSale;\r\n\r\n    setAmount(+event.target.value);\r\n\r\n    if (currencyFirst === currencySecond) {\r\n      setCurrentAmount(+event.target.value);\r\n    } else {\r\n      setCurrentAmount(+event.target.value * rate);\r\n    }\r\n  };\r\n\r\n  // eslint-disable-next-line no-console\r\n  console.log(courses, amount, currentAmount);\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <h1 className=\"converter__title\">Converter</h1>\r\n      <div className=\"converter-header\">\r\n        <div className=\"converter-header__item\">\r\n          <div className=\"currency\">\r\n            <div className=\"currency__title\">\r\n              {usd && usd.ccy}\r\n            </div>\r\n            <div className=\"currency__exchange\">\r\n              {usd && Math.floor(+usd.buy * 100) / 100}\r\n              {usd && Math.floor(+usd.sale * 100) / 100}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"converter-header__item\">\r\n          <div className=\"currency\">\r\n            <div className=\"currency__title\">\r\n              {eur && eur.ccy}\r\n            </div>\r\n            <div className=\"currency__exchange\">\r\n              {eur && Math.floor(+eur.buy * 100) / 100}\r\n              {eur && Math.floor(+eur.sale * 100) / 100}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"converter__selecters selecters\">\r\n        <select\r\n          name=\"courses\"\r\n          value={currencyFirst}\r\n          onChange={changeCurrencyFirst}\r\n        >\r\n          {courses.map(currency => (\r\n            <option\r\n              key={currency.ccy}\r\n              value={currency.ccy}\r\n            >\r\n              {currency.ccy}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"exchange-input-first\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"exchange-input-first\"\r\n            value={Math.floor(+amount * 100) / 100}\r\n            onChange={changeAmount}\r\n          />\r\n        </label>\r\n\r\n        <select\r\n          name=\"courses\"\r\n          value={currencySecond}\r\n          onChange={changeCurrencySecond}\r\n        >\r\n          {courses.map(currency => (\r\n            <option\r\n              key={currency.ccy}\r\n              value={currency.ccy}\r\n            >\r\n              {currency.ccy}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"exchange-input-second\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"exchange-input-second\"\r\n            value={Math.floor(+currentAmount * 100) / 100}\r\n            onChange={changeСurrentAmount}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
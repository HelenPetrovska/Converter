{"version":3,"sources":["api.ts","components/CurrencyExchange/CurrencyExchange.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["getCours","a","fetch","response","json","CurrencyExchange","usdBuy","euroBuy","usdSale","euroSale","useState","currencyFirst","setCurrencyFirst","currencySecond","setCurrencySecond","amount","setAmount","currentAmount","setCurrentAmount","console","log","name","value","onChange","event","target","htmlFor","type","id","Header","App","setUsdBuy","setEuroBuy","setUsdSale","setEuroSale","useEffect","courses","usdCours","find","el","ccy","buy","sale","euroCours","coursesAll","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53763b82.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\n\nexport const getCours = async () => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  usdBuy: string,\n  euroBuy: string,\n  usdSale: string,\n  euroSale: string,\n};\n\nexport const CurrencyExchange: React.FC<Props> = ({\n  usdBuy,\n  euroBuy,\n  usdSale,\n  euroSale,\n}) => {\n  const [currencyFirst, setCurrencyFirst] = useState('UAH');\n  const [currencySecond, setCurrencySecond] = useState('USD');\n  const [amount, setAmount] = useState<number>();\n  const [currentAmount, setCurrentAmount] = useState<number>();\n\n  const changeCurrencyFirst = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrencyFirst(event.target.value);\n  };\n\n  const changeCurrencySecond = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrencySecond(event.target.value);\n  };\n\n  const changeСurrentAmount = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (currencyFirst === 'UAH' && currencySecond === 'USD') {\n      setCurrentAmount(+event.target.value / +usdBuy);\n    }\n\n    if (currencyFirst === 'USD' && currencySecond === 'UAH') {\n      setCurrentAmount(+event.target.value * +usdBuy);\n    }\n\n    if (currencyFirst === 'UAH' && currencySecond === 'EURO') {\n      setCurrentAmount(+event.target.value / +euroBuy);\n    }\n\n    if (currencyFirst === 'EURO' && currencySecond === 'UAH') {\n      setCurrentAmount(+event.target.value * +euroBuy);\n    }\n\n    if (currencyFirst === currencySecond) {\n      setCurrentAmount(+event.target.value);\n    }\n\n    if (currencyFirst === 'USD' && currencySecond === 'EURO') {\n      setCurrentAmount((+event.target.value / +euroBuy) * +usdSale);\n    }\n\n    if (currencyFirst === 'EURO' && currencySecond === 'USD') {\n      setCurrentAmount((+event.target.value / +usdBuy) * +euroSale);\n    }\n\n    setAmount(+event.target.value);\n  };\n\n  const changeAmount = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (currencyFirst === 'UAH' && currencySecond === 'USD') {\n      setAmount(+event.target.value * +usdBuy);\n    }\n\n    if (currencyFirst === 'USD' && currencySecond === 'UAH') {\n      setAmount(+event.target.value / +usdBuy);\n    }\n\n    if (currencyFirst === 'UAH' && currencySecond === 'EURO') {\n      setAmount(+event.target.value * +euroBuy);\n    }\n\n    if (currencyFirst === 'EURO' && currencySecond === 'UAH') {\n      setAmount(+event.target.value / +euroBuy);\n    }\n\n    if (currencyFirst === currencySecond) {\n      setAmount(+event.target.value);\n    }\n\n    if (currencyFirst === 'USD' && currencySecond === 'EURO') {\n      setAmount((+event.target.value * +euroBuy) / +usdSale);\n    }\n\n    if (currencyFirst === 'EURO' && currencySecond === 'USD') {\n      setAmount((+event.target.value * +usdBuy) / +euroSale);\n    }\n\n    setCurrentAmount(+event.target.value);\n  };\n\n  // eslint-disable-next-line no-console\n  console.log(currencyFirst, currencySecond, amount, currentAmount);\n\n  return (\n    <>\n      <select\n        name=\"courses\"\n        value={currencyFirst}\n        onChange={changeCurrencyFirst}\n      >\n        <option value=\"USD\">USD</option>\n        <option value=\"EURO\">EURO</option>\n        <option value=\"UAH\">UAH</option>\n      </select>\n      <label htmlFor=\"exchange-input-first\">\n        <input\n          type=\"number\"\n          id=\"exchange-input-first\"\n          value={amount}\n          onChange={changeСurrentAmount}\n        />\n      </label>\n\n      <select\n        name=\"courses\"\n        value={currencySecond}\n        onChange={changeCurrencySecond}\n      >\n        <option value=\"USD\">USD</option>\n        <option value=\"EURO\">EURO</option>\n        <option value=\"UAH\">UAH</option>\n      </select>\n      <label htmlFor=\"exchange-input-second\">\n        <input\n          type=\"number\"\n          id=\"exchange-input-second\"\n          value={currentAmount}\n          onChange={changeAmount}\n        />\n      </label>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  usdBuy: string,\n  euroBuy: string,\n  usdSale: string,\n  euroSale: string,\n};\n\nexport const Header: React.FC<Props> = ({\n  usdBuy,\n  euroBuy,\n  usdSale,\n  euroSale,\n}) => {\n  return (\n    <>\n      {usdBuy}\n      {euroBuy}\n      {usdSale}\n      {euroSale}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\r\nimport { getCours } from './api';\r\nimport './App.scss';\r\nimport { CurrencyExchange } from './components/CurrencyExchange/CurrencyExchange';\r\nimport { Header } from './components/Header';\r\n\r\ninterface Cours {\r\n  ccy: string,\r\n  base_ccy: string,\r\n  buy: string,\r\n  sale: string,\r\n}\r\n\r\nexport const App: React.FC = () => {\r\n  const [usdBuy, setUsdBuy] = useState('');\r\n  const [euroBuy, setEuroBuy] = useState('');\r\n\r\n  const [usdSale, setUsdSale] = useState('');\r\n  const [euroSale, setEuroSale] = useState('');\r\n\r\n  useEffect(() => {\r\n    const coursesAll = async () => {\r\n      const courses = await getCours();\r\n\r\n      const usdCours = courses.find((el: Cours) => el.ccy === 'USD');\r\n\r\n      setUsdBuy(usdCours.buy);\r\n      setUsdSale(usdCours.sale);\r\n\r\n      const euroCours = courses.find((el: Cours) => el.ccy === 'EUR');\r\n\r\n      setEuroBuy(euroCours.buy);\r\n      setEuroSale(euroCours.sale);\r\n    };\r\n\r\n    coursesAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"starter\">\r\n      <Header\r\n        usdBuy={usdBuy}\r\n        euroBuy={euroBuy}\r\n        usdSale={usdSale}\r\n        euroSale={euroSale}\r\n      />\r\n\r\n      <CurrencyExchange\r\n        usdBuy={usdBuy}\r\n        euroBuy={euroBuy}\r\n        usdSale={usdSale}\r\n        euroSale={euroSale}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}